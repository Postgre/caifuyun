package com.zepan.android.widget;import android.app.ActionBar.LayoutParams;import android.app.Activity;import android.app.Dialog;import android.content.Context;import android.content.Intent;import android.content.res.TypedArray;import android.net.Uri;import android.util.AttributeSet;import android.view.Gravity;import android.view.View;import android.view.Window;import android.view.WindowManager;import com.facebook.drawee.view.SimpleDraweeView;import com.zepan.android.sdk.R;/** * 继承于ImageView，点击后可以弹出一个对话框，选择拍照或从相册获取，如果已经有图片，还可以 删除。 用户可自定义对话框。<br> * <strong>注意：</strong><br> * 1､定义拍照对话框时请保证拍照、相册、取消的id号分别为take_photo，select_photo，tv_cancel * 删除对话框删除、取消的id分别为tv_delete,tv_cancel。<br> * 2､设置image初始背景时用background非src。<br> * 3､设置imageview的图片时，请调用方法{@link #setImageURI(Uri)}。<br> * <strong>用法：</strong> <strong>1､在AndroidManifest.xml中声明。</strong><br> * <code>        &ltactivity android:name="com.soundcloud.android.crop.AchievePhotoActivity" ><br>        &lt/activity><br>        &ltactivity android:name="com.soundcloud.android.crop.CropImageActivity" ><br>        &lt/activity><br> * </code> * <strong>2､在activity的xml中使用当前AchievePhotoImageView并配置相关属性。</strong><br> * <code> *  xmlns:sdk="http://schemas.android.com/apk/res-auto" * 	&ltcom.soundcloud.android.crop.AchievePhotoImageView<br> * 	    android:id="@+id/iv"<br> * 	    android:layout_width="100dp"<br> * 	    android:layout_height="100dp"<br> * 	    sdk:cropShape="none"<br> * 	    sdk:dialogLayout="@layout/activity_main"<br> * 	    android:src="@drawable/ic_launcher"<br> * 	    >	    <br> * 	&lt/com.soundcloud.android.crop.AchievePhotoImageView><br> * </code> * <strong>3､在activity中接收返回。</strong><br> * <code> * 	protected void onActivityResult(int requestCode, int resultCode, Intent data) {<br> * 		// TODO Auto-generated method stub<br> * 		if(data != null){<br> * 			Uri uri = data.getParcelableExtra("uri");<br> *          int viewId = data.getIntExtra("viewId",0);//多个ImageView控件时使用。 * 			Log.i(TAG, uri.toString());<br> * 		}<br> * 		super.onActivityResult(requestCode, resultCode, data);<br> * 	}<br> * <strong>4､删除回调。</strong><br> * 关于删除，请参考接口{@link OnPhotoDeleteCallBack} * </code> * */public class AchievePhotoImageView extends SimpleDraweeView {	/** 删除回调事件 */	private OnPhotoDeleteCallBack mDeleteCallBack = null;	/** 删除对话框布局*/	private int deleteLayoutResId;	/** 图片设置的url*/	private String imageUrl;
	public AchievePhotoImageView(final Context context, AttributeSet attrs) {		super(context, attrs);		// 读取配置		TypedArray a = context.obtainStyledAttributes(attrs,				R.styleable.AchievePhotoImageView);		// 取输入框名称		final int cropShape = a.getInt(				R.styleable.AchievePhotoImageView_cropShape, 1);		// 拍照dialog布局		final int photoLayoutResId = a.getResourceId(				R.styleable.AchievePhotoImageView_photoDialogLayout,				R.layout.dialog_achieve_photo);		// 删除照片dialog布局		deleteLayoutResId = a.getResourceId(				R.styleable.AchievePhotoImageView_deleteDialogLayout,				R.layout.dialog_delete_photo);		a.recycle();		// 追加按钮点击事件		this.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				if (context instanceof Activity) {					// 如果当前是拍照模式，弹出拍照dialog					if (imageUrl == null) {						Intent intent = new Intent(context,								AchievePhotoActivity.class);						intent.putExtra("cropShape", cropShape);						intent.putExtra("layoutResId", photoLayoutResId);						intent.putExtra("viewId", getId());						// 跳转到AchievePhotoActivity						Activity activity = (Activity) context;						activity.startActivityForResult(intent, 0);					} else {						Dialog dialog = createDialog();						dialog.show();						Window window = dialog.getWindow();						// 设置dialog宽度						WindowManager.LayoutParams lp = new WindowManager.LayoutParams();						lp.copyFrom(window.getAttributes());						// This makes the dialog take up the full width						lp.width = WindowManager.LayoutParams.MATCH_PARENT;						lp.height = WindowManager.LayoutParams.WRAP_CONTENT;						window.setAttributes(lp);					}				}			}		});	}	/** 创建删除对话框dialog */	private Dialog createDialog() {		final Dialog deleteDialog = new Dialog(getContext());		deleteDialog.requestWindowFeature(Window.FEATURE_NO_TITLE);		// 设置dialog位置		Window window = deleteDialog.getWindow();		window.setGravity(Gravity.BOTTOM);		/*WindowManager.LayoutParams lp = new WindowManager.LayoutParams();		lp.copyFrom(window.getAttributes());		// This makes the dialog take up the full width		lp.width = WindowManager.LayoutParams.MATCH_PARENT;		lp.height = WindowManager.LayoutParams.WRAP_CONTENT;		window.setAttributes(lp);*/		deleteDialog.setContentView(deleteLayoutResId);		window.setBackgroundDrawable(null);		window.setGravity(Gravity.BOTTOM);		window.setLayout(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);		// 定义事件		deleteDialog.findViewById(R.id.tv_delete).setOnClickListener(				new OnClickListener() {					@Override					public void onClick(View v) {						deleteDialog.dismiss();						if (mDeleteCallBack != null) {							mDeleteCallBack.deleteItemClick(getId(), imageUrl);						}					}				});		deleteDialog.findViewById(R.id.tv_cancel).setOnClickListener(				new OnClickListener() {					@Override					public void onClick(View v) {						deleteDialog.dismiss();					}				});		return deleteDialog;	}	@Override	public void setImageURI(Uri uri) {		super.setImageURI(uri);		if(uri != null){			this.imageUrl = uri.toString();		}else{			this.imageUrl = null;		}	}	/** 定义删除回调 */	public interface OnPhotoDeleteCallBack {		/**		 * @param viewId		 *            删除的ImageView id号		 * @param imageUrl删除图片的地址		 */		void deleteItemClick(int viewId, String imageUrl);	}
	public void setOnPhotoDeleteCallBack(OnPhotoDeleteCallBack deleteCallBack){		this.mDeleteCallBack=deleteCallBack;	}}