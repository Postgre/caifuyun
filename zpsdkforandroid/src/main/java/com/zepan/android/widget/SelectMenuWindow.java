package com.zepan.android.widget;import android.app.Activity;import android.content.Context;import android.graphics.Color;import android.graphics.drawable.Drawable;import android.os.Handler;import android.util.DisplayMetrics;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.PopupWindow;import android.widget.TextView;import com.zepan.android.sdk.R;import com.zepan.android.widget.SelectMenuAttachView;import com.zepan.android.widget.SelectMenuWindow;import com.zepan.android.widget.SelectMenuAttachView.OnItemSelectedListener;/** * {@link SelectMenuAttachView}的点击后的弹出框。 * */public class SelectMenuWindow extends PopupWindow {	/** 屏幕宽度 */	private int screenWidth;	/** PopupWindow高度 */	private int windowHeight;	private SelectMenuAttachView touchView;	/** TextView默认的背景*/	private Drawable preImage;	/** TextView选中后的背景*/	private Drawable postImage;	/** PopupWindow中条目文字数组*/	private String[] itemValues;	/**处理选中后，PopupWindow的延迟*/	private Handler handler = new Handler();	/**	 *  菜单项目点击回调	 * @see SelectMenuAttachView#selectedListener	 * */	private OnItemSelectedListener selectedListener = null;	public SelectMenuWindow(final Context context, SelectMenuAttachView touchView,			final String[] itemValues) {		super(context);		this.touchView = touchView;		this.itemValues = itemValues;		this.selectedListener = touchView.getOnItemSelectedListener();		// 获取屏幕尺寸		if (context instanceof Activity) {			Activity ac = (Activity) context;			DisplayMetrics dm = new DisplayMetrics();			ac.getWindowManager().getDefaultDisplay().getMetrics(dm);			screenWidth = dm.widthPixels;		}		// 设置背景		this.setBackgroundDrawable(context.getResources().getDrawable(				android.R.color.white));		// 加载PopupWindow布局文件		final ViewGroup contentView = (ViewGroup) View.inflate(context,				R.layout.select_menu_content, null);		// TextView的背景		preImage = context.getResources().getDrawable(				R.drawable.ic_action_select_transparent);		postImage = context.getResources().getDrawable(				R.drawable.ic_action_select);		preImage.setBounds(0, 0, 60, 60);		postImage.setBounds(0, 0, 60, 60);		// 填充内容到PopupWindow		for (int i = 0; i < itemValues.length; i++) {			View itemView = View.inflate(context,					R.layout.select_menu_content_item, null);			final TextView textView = (TextView) itemView					.findViewById(android.R.id.text1);			textView.setText(itemValues[i]);			textView.setTag(i);			contentView.addView(itemView);			// 增加点击事件			textView.setOnClickListener(new OnClickListener() {				@Override				public void onClick(View v) {					// 设置选中样式					int index = Integer.parseInt(v.getTag().toString());					setSelected(index);					handler.postDelayed(new Runnable() {					    public void run() {							SelectMenuWindow.this.dismiss();					    }}, 100);					// 执行回调					if(selectedListener != null){						selectedListener.itemSelected(index);					}				}			});			// 由于每个item高度一样，不必每次计算，这里采取计算一次乘以item个数。			if (i == 0) {				int w = View.MeasureSpec.makeMeasureSpec(0,						View.MeasureSpec.UNSPECIFIED);				int h = View.MeasureSpec.makeMeasureSpec(0,						View.MeasureSpec.UNSPECIFIED);				itemView.measure(w, h);				windowHeight = itemView.getMeasuredHeight() * itemValues.length;			}		}		this.setContentView(contentView);		// 默认第1条内容选中。		setSelected(touchView.getSelectedPosition());		showPopupWindow();	}	/**	 * 设置PopupWindow某一条目内容选中	 * @param index 待选中的条目在PopupWindow中的序号。	 * */	private void setSelected(int index){		// 获取PopupWindow中的第index个子view		ViewGroup contentView = (ViewGroup)this.getContentView();		// 清除其他View选中样式		for (int i = 0; i < itemValues.length; i++) {			View childView = contentView.getChildAt(i);			TextView textView = (TextView) childView.findViewById(android.R.id.text1);			if(i != index){				textView.setTextColor(Color.BLACK);				textView.setCompoundDrawables(preImage, null, null,						null);				// #C0000000			}else{				textView.setTextColor(Color.parseColor("#1998db"));				textView.setCompoundDrawables(postImage, null, null, null);			}				}		touchView.setSelectedPosition(index);	}		/**	 * 在界面中显示PopupWindow	 * */	private void showPopupWindow() {		this.setWidth(screenWidth);		this.setHeight(windowHeight);		// 设置PopupWindow外部区域是否可触摸		this.setFocusable(true); // 设置PopupWindow可获得焦点		this.setTouchable(true); // 设置PopupWindow可触摸		this.setOutsideTouchable(true); // 设置非PopupWindow区域可触摸//		this.setAnimationStyle(R.style.translate_up_dowm);		// window.showAtLocation(ac.findViewById(android.R.id.content),		// Gravity.CENTER | Gravity.BOTTOM, 0, 200);		this.showAsDropDown(touchView, 0 ,10);	}		}