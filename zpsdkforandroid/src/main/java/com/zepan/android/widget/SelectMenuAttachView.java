package com.zepan.android.widget;import android.content.Context;import android.content.res.TypedArray;import android.util.AttributeSet;import android.view.View;import android.widget.RelativeLayout;import com.zepan.android.sdk.R;/** * 继承于RelativeLayout,点击后可弹出{@link SelectMenuWindow}。用户可通过xml在布局中添加内容。 *  * <b>使用方法如下：</b><br> *      1､activity的xml中追加xmlns:app="http://packagename/apk/res/packagename"<br> *      2､在arrays.xml中建一个数组显示下拉菜单中的内容，如<br> * <code> *  &ltstring-array name="wheel_values"><br> *      &ltitem>item1&lt/item><br> *      &ltitem>item2&lt/item><br> *      &ltitem>item3&lt/item><br> *  &lt/string-array><br> * </code> *      3､设置属性：itemValues如：<br> *      <code> *  &ltcom.zepan.android.widget.SelectPopupView<br> *         android:layout_width="match_parent"<br> *         android:layout_height="50dp"<br> *         android:background="@android:color/holo_blue_dark"<br> *         app:itemValues="@array/wheel_values"<br> *         ><br> *         <TextView <br> *            android:layout_width="match_parent"<br> *             android:layout_height="wrap_content"<br> *             android:text="点击"/><br> *     &lt/com.zepan.android.widget.SelectPopupView><br> *     4、处理菜单选中:<br> *     		SelectMenuAttachView view = (SelectMenuAttachView)findViewById(R.id.select_menu);<br>		view.setOnItemSelectedListener(new OnItemSelectedListener() {<br>			@Override<br>			public void itemSelected(int index) {<br>				Log.i("==", index + "");<br>			}<br>		});<br> * </code> * */public class SelectMenuAttachView extends RelativeLayout {	/** 菜单项目点击回调*/	private OnItemSelectedListener selectedListener = null;	/**SelectMenuWindow中选中的条目下标	 * @see SelectMenuWindow	 * */	private int selectedPosition;	public SelectMenuAttachView(final Context context, AttributeSet attrs) {		super(context, attrs); // 读取资源文件		TypedArray a = context.obtainStyledAttributes(attrs,				R.styleable.SelectMenuAttachView);		int wheelValueResId = a.getResourceId(				R.styleable.SelectMenuAttachView_itemValues, 0);		final String[] itemValues = getResources().getStringArray(				wheelValueResId);		a.recycle();		this.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				new SelectMenuWindow(context, SelectMenuAttachView.this, itemValues);			}		});	}		/**设置选中的条目*/	public void setSelectedPosition(int position){		this.selectedPosition = position;	}		public int getSelectedPosition(){		return this.selectedPosition;	}	/**	 * 设置回调监听，没有设置则不能监听	 * */	public void setOnItemSelectedListener(OnItemSelectedListener listener){		this.selectedListener = listener;	}		public OnItemSelectedListener getOnItemSelectedListener(){		return this.selectedListener;	}	/**	 * 定义选中内容后调用接口	 * */	public interface OnItemSelectedListener{		/**		 * @param index被选中的序号		 * */		void itemSelected(int index);	}}