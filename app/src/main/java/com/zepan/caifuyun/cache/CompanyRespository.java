package com.zepan.caifuyun.cache;import java.util.ArrayList;import java.util.HashMap;import java.util.Iterator;import java.util.List;import java.util.Map;import java.util.Set;import com.zepan.caifuyun.entity.User;/** * 临时存储公司相头信息 * create by zhanglei at 20150907 * */public class CompanyRespository {	/**存储用户与用户对应关系，清除缓存时需要清空*/	public static Map<String, User> userMap = new HashMap<String, User>();		/**根据用户列表返回用户头像	 * @param userIdList 用户id列表	 * @return 用户头像列表	 * */	public static List<String> getAvatarList(List<String> userIdList){		if(userIdList == null || userIdList.isEmpty()){			return null;		}		List<String> avatarList = new ArrayList<String>();		Set<String> idSet = userMap.keySet();		Iterator<String> it = idSet.iterator();		while(it.hasNext()){			String id = it.next();			if(userIdList.contains(id)){				avatarList.add(userMap.get(id).getAvatar());			}		}		return avatarList;	}		/**根据用户列表返回用户名称，多个以“、”分开，作为讨论组名称。	 * @param 用户名，可能多个	 * */	public static String getNameList(List<String> userIdList){		if(userIdList == null || userIdList.isEmpty()){			return null;		}		if(userIdList.size() == 1){			return userMap.get(userIdList.get(0)).getUserName();		}		StringBuffer nameBuffer = new StringBuffer();		Set<String> idSet = userMap.keySet();		Iterator<String> it = idSet.iterator();		while(it.hasNext()){			String id = it.next();			if(userIdList.contains(id)){				nameBuffer.append(userMap.get(id).getUserName() + "、");			}		}		if(nameBuffer.toString().contains("、")){			return nameBuffer.toString().substring(0, nameBuffer.length() - 1);		}else{			return nameBuffer.toString();		}	}}